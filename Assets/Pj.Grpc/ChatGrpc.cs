// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: chat.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Pj.Grpc.Chat {
  public static partial class Chat
  {
    static readonly string __ServiceName = "Chat";

    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.RequestAuthorize> __Marshaller_RequestAuthorize = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.RequestAuthorize.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.ResponseAuthorize> __Marshaller_ResponseAuthorize = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.ResponseAuthorize.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.RequestConnect> __Marshaller_RequestConnect = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.RequestConnect.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.Event> __Marshaller_Event = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.Event.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.CommandSay> __Marshaller_CommandSay = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.CommandSay.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.None> __Marshaller_None = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.None.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Pj.Grpc.Chat.CommandLeave> __Marshaller_CommandLeave = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Pj.Grpc.Chat.CommandLeave.Parser.ParseFrom);

    static readonly grpc::Method<global::Pj.Grpc.Chat.RequestAuthorize, global::Pj.Grpc.Chat.ResponseAuthorize> __Method_Authorize = new grpc::Method<global::Pj.Grpc.Chat.RequestAuthorize, global::Pj.Grpc.Chat.ResponseAuthorize>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Authorize",
        __Marshaller_RequestAuthorize,
        __Marshaller_ResponseAuthorize);

    static readonly grpc::Method<global::Pj.Grpc.Chat.RequestConnect, global::Pj.Grpc.Chat.Event> __Method_Connect = new grpc::Method<global::Pj.Grpc.Chat.RequestConnect, global::Pj.Grpc.Chat.Event>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Connect",
        __Marshaller_RequestConnect,
        __Marshaller_Event);

    static readonly grpc::Method<global::Pj.Grpc.Chat.CommandSay, global::Pj.Grpc.Chat.None> __Method_Say = new grpc::Method<global::Pj.Grpc.Chat.CommandSay, global::Pj.Grpc.Chat.None>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Say",
        __Marshaller_CommandSay,
        __Marshaller_None);

    static readonly grpc::Method<global::Pj.Grpc.Chat.CommandLeave, global::Pj.Grpc.Chat.None> __Method_Leave = new grpc::Method<global::Pj.Grpc.Chat.CommandLeave, global::Pj.Grpc.Chat.None>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Leave",
        __Marshaller_CommandLeave,
        __Marshaller_None);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Pj.Grpc.Chat.ChatReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Chat</summary>
    public abstract partial class ChatBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Pj.Grpc.Chat.ResponseAuthorize> Authorize(global::Pj.Grpc.Chat.RequestAuthorize request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task Connect(global::Pj.Grpc.Chat.RequestConnect request, grpc::IServerStreamWriter<global::Pj.Grpc.Chat.Event> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Pj.Grpc.Chat.None> Say(global::Pj.Grpc.Chat.CommandSay request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Pj.Grpc.Chat.None> Leave(global::Pj.Grpc.Chat.CommandLeave request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Chat</summary>
    public partial class ChatClient : grpc::ClientBase<ChatClient>
    {
      /// <summary>Creates a new client for Chat</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ChatClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Chat that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ChatClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ChatClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ChatClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Pj.Grpc.Chat.ResponseAuthorize Authorize(global::Pj.Grpc.Chat.RequestAuthorize request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Authorize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Pj.Grpc.Chat.ResponseAuthorize Authorize(global::Pj.Grpc.Chat.RequestAuthorize request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Authorize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.ResponseAuthorize> AuthorizeAsync(global::Pj.Grpc.Chat.RequestAuthorize request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AuthorizeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.ResponseAuthorize> AuthorizeAsync(global::Pj.Grpc.Chat.RequestAuthorize request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Authorize, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::Pj.Grpc.Chat.Event> Connect(global::Pj.Grpc.Chat.RequestConnect request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Pj.Grpc.Chat.Event> Connect(global::Pj.Grpc.Chat.RequestConnect request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Connect, null, options, request);
      }
      public virtual global::Pj.Grpc.Chat.None Say(global::Pj.Grpc.Chat.CommandSay request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Say(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Pj.Grpc.Chat.None Say(global::Pj.Grpc.Chat.CommandSay request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Say, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.None> SayAsync(global::Pj.Grpc.Chat.CommandSay request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.None> SayAsync(global::Pj.Grpc.Chat.CommandSay request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Say, null, options, request);
      }
      public virtual global::Pj.Grpc.Chat.None Leave(global::Pj.Grpc.Chat.CommandLeave request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Leave(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Pj.Grpc.Chat.None Leave(global::Pj.Grpc.Chat.CommandLeave request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Leave, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.None> LeaveAsync(global::Pj.Grpc.Chat.CommandLeave request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Pj.Grpc.Chat.None> LeaveAsync(global::Pj.Grpc.Chat.CommandLeave request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Leave, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ChatClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ChatClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ChatBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Authorize, serviceImpl.Authorize)
          .AddMethod(__Method_Connect, serviceImpl.Connect)
          .AddMethod(__Method_Say, serviceImpl.Say)
          .AddMethod(__Method_Leave, serviceImpl.Leave).Build();
    }

  }
}
#endregion
